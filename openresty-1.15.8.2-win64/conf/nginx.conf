error_log stdout info;
events { } 
http{
resolver 8.8.8.8;
log_format compression '$http_apikey' - '$token' ;
                
    default_type application/octet-stream;
	include    mime.types;
	access_log stdout compression;
	server {

    listen 80;

    set $token  $http_apikey;
    location / {
			 
	access_by_lua_block{
        local res = ngx.location.capture("/_validate_by_apikey")
        if res.status ~= ngx.HTTP_OK then
            ngx.exit(res.status)	
        end
		 local res = ngx.location.capture("/_validate_cpf")
        if res.status ~= ngx.HTTP_OK then
            ngx.exit(res.status)	
        end
    }
	 proxy_pass http://localhost:8080;
       
    }

		location = /_validate_by_apikey {		
			proxy_method      GET;
			set $target  http://10.129.162.164:31555/validate/apikey?apikey=$http_apikey;
			proxy_pass     $target;
		}
		
		location = /_validate_cpf {
			
			proxy_method      GET;
			set $target  http://10.129.162.164:31555/validate/cpf?cpf=$http_cpf;
			proxy_pass     $target;
		}
	}
}